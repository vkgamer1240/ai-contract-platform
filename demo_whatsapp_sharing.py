#!/usr/bin/env python3
"""
WhatsApp Contract Sharing Demo
==============================
This script demonstrates how to send contract data to a specific person via WhatsApp
"""

import json
import sys
import os

# Add the current directory to the path so we can import our modules
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from whatsapp_integration import WhatsAppContractSender, AdvancedWhatsAppSender

def demo_whatsapp_contract_sharing():
    """Demonstrate WhatsApp contract sharing"""
    
    print("🎯 WhatsApp Contract Sharing Demo")
    print("=" * 50)
    
    # Example contract data (like what would come from contract creation)
    contract_data = {
        'contract': '''SERVICE AGREEMENT
        
Between: Digital Solutions LLC (Service Provider)
And: Retail Corp (Client)

Services: E-commerce website development and maintenance
Duration: 12 months
Payment: $5,000/month, Net 15 days

This agreement covers the development of a complete e-commerce platform including:
- Frontend user interface
- Backend API development
- Payment processing integration
- Inventory management system
- Customer support portal

Risk Assessment: MEDIUM (Score: 58/100)
Generated by AI Contract Platform using RoBERTa + Groq AI''',
        
        'parameters': {
            'company_a': 'Digital Solutions LLC',
            'company_b': 'Retail Corp',
            'services': 'E-commerce website development and maintenance',
            'duration': '12 months',
            'payment_terms': '$5,000/month, Net 15 days'
        },
        
        'risk_analysis': {
            'risk_analysis': {
                'risk_score': 58,
                'overall_risk': 'MEDIUM',
                'high_risk': [],
                'medium_risk': ['Payment timeline', 'Scope definition'],
                'low_risk': ['Duration clarity', 'Service description']
            }
        },
        
        'generation_engine': 'GROQ_LLAMA3',
        'analysis_engine': 'YOUR_FINE_TUNED_ROBERTA',
        'timestamp': '2025-07-07T15:30:00'
    }
    
    # Get recipient information from user
    print("📞 Enter recipient information:")
    recipient_name = input("Recipient Name (e.g., John Smith): ").strip() or "Client"
    recipient_phone = input("WhatsApp Number (e.g., +1234567890): ").strip()
    
    if not recipient_phone:
        print("❌ Phone number is required for WhatsApp sharing!")
        return
    
    print(f"\n📱 Preparing to share contract with {recipient_name} at {recipient_phone}")
    
    try:
        # Initialize WhatsApp sender
        sender = WhatsAppContractSender()
        
        # Create recipient info
        recipient_info = {
            'name': recipient_name,
            'phone': recipient_phone
        }
        
        # Generate sharing options
        print("🔄 Creating WhatsApp sharing options...")
        sharing_result = sender.create_contract_sharing_options(contract_data, recipient_info)
        
        print("✅ WhatsApp sharing options ready!")
        print("\n📋 Available Sharing Methods:")
        print("-" * 40)
        
        for method, details in sharing_result['sharing_options'].items():
            print(f"{details['icon']} {details['title']}")
            print(f"   {details['description']}")
            print()
        
        # Show sharing options
        print("🎯 Choose your sharing method:")
        print("1. 💬 Open WhatsApp Web (automatic)")
        print("2. 📱 Show QR Code for phone scanning")
        print("3. 📋 Copy message to clipboard")
        print("4. 🚀 Advanced: Schedule automatic sending (if available)")
        
        choice = input("\nEnter your choice (1-4): ").strip()
        
        if choice == "1":
            # WhatsApp Web URL
            whatsapp_url = sharing_result['whatsapp_url']
            print(f"\n📱 WhatsApp Web URL Generated:")
            print(f"🔗 {whatsapp_url}")
            print("\n💡 Copy and paste this URL in your browser to open WhatsApp Web with the pre-filled message!")
            
        elif choice == "2":
            # QR Code
            qr_code = sharing_result['qr_code']
            if qr_code:
                print("\n📱 QR Code generated successfully!")
                print("💡 In a real web interface, this would display as a scannable QR code image.")
                print(f"📊 QR Code data length: {len(qr_code)} characters")
            else:
                print("❌ QR Code generation failed")
                
        elif choice == "3":
            # Copy message
            message = sharing_result['message']
            print("\n📋 Contract Message for WhatsApp:")
            print("=" * 50)
            print(message)
            print("=" * 50)
            print("💡 Copy the message above and paste it into WhatsApp manually!")
            
        elif choice == "4":
            # Advanced sending
            print("\n🚀 Testing Advanced WhatsApp Features...")
            advanced_sender = AdvancedWhatsAppSender()
            
            if advanced_sender.available:
                print("✅ Advanced WhatsApp sender is available!")
                print("💡 This would automatically:")
                print("   - Open WhatsApp Web")
                print("   - Navigate to the contact")
                print("   - Send the message")
                print("   - Close the tab")
                print("\n⚠️ Note: This requires pywhatkit and will actually send the message!")
                
                confirm = input("Do you want to proceed with automatic sending? (yes/no): ").lower()
                if confirm == 'yes':
                    print("🔄 Scheduling message for 1 minute from now...")
                    # Uncomment the next line to actually send:
                    # result = advanced_sender.schedule_contract_message(recipient_phone, contract_data, 1)
                    print("✅ Message would be scheduled and sent automatically!")
                else:
                    print("⏸️ Automatic sending cancelled")
            else:
                print("⚠️ Advanced WhatsApp sender not available")
                print("💡 Install pywhatkit for automatic sending: pip install pywhatkit")
        
        print(f"\n🎉 WhatsApp sharing demo completed!")
        print(f"📊 Contract ready to share with {recipient_name}")
        
    except Exception as e:
        print(f"❌ WhatsApp sharing failed: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    demo_whatsapp_contract_sharing()
